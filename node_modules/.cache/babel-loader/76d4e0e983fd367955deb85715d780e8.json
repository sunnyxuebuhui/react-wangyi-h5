{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nexport default function (ComposedComponent) {\n  return _a = function (_React$Component) {\n    _inherits(_a, _React$Component);\n\n    function _a() {\n      _classCallCheck(this, _a);\n\n      var _this = _possibleConstructorReturn(this, (_a.__proto__ || Object.getPrototypeOf(_a)).apply(this, arguments));\n\n      _this.getValue = function () {\n        var _this$props = _this.props,\n            children = _this$props.children,\n            selectedValue = _this$props.selectedValue;\n\n        if (selectedValue && selectedValue.length) {\n          return selectedValue;\n        } else {\n          if (!children) {\n            return [];\n          }\n\n          return React.Children.map(children, function (c) {\n            var cc = React.Children.toArray(c.children || c.props.children);\n            return cc && cc[0] && cc[0].props.value;\n          });\n        }\n      };\n\n      _this.onChange = function (i, v, cb) {\n        var value = _this.getValue().concat();\n\n        value[i] = v;\n\n        if (cb) {\n          cb(value, i);\n        }\n      };\n\n      _this.onValueChange = function (i, v) {\n        _this.onChange(i, v, _this.props.onValueChange);\n      };\n\n      _this.onScrollChange = function (i, v) {\n        _this.onChange(i, v, _this.props.onScrollChange);\n      };\n\n      return _this;\n    }\n\n    _createClass(_a, [{\n      key: 'render',\n      value: function render() {\n        return React.createElement(ComposedComponent, _extends({}, this.props, {\n          getValue: this.getValue,\n          onValueChange: this.onValueChange,\n          onScrollChange: this.props.onScrollChange && this.onScrollChange\n        }));\n      }\n    }]);\n\n    return _a;\n  }(React.Component), _a.defaultProps = {\n    prefixCls: 'rmc-multi-picker',\n    onValueChange: function onValueChange() {}\n  }, _a;\n\n  var _a;\n}\n;","map":null,"metadata":{},"sourceType":"module"}