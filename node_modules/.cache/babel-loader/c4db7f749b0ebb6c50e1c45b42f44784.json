{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport classnames from 'classnames';\nimport MultiPickerMixin from './MultiPickerMixin';\n\nvar MultiPicker = function MultiPicker(props) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      rootNativeProps = props.rootNativeProps,\n      children = props.children,\n      style = props.style;\n  var selectedValue = props.getValue();\n  var colElements = React.Children.map(children, function (col, i) {\n    return React.cloneElement(col, {\n      selectedValue: selectedValue[i],\n      onValueChange: function onValueChange() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return props.onValueChange.apply(props, [i].concat(args));\n      },\n      onScrollChange: props.onScrollChange && function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return props.onScrollChange.apply(props, [i].concat(args));\n      }\n    });\n  });\n  return React.createElement('div', _extends({}, rootNativeProps, {\n    style: style,\n    className: classnames(className, prefixCls)\n  }), colElements);\n};\n\nexport default MultiPickerMixin(MultiPicker);","map":null,"metadata":{},"sourceType":"module"}