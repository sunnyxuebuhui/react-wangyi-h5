{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* tslint:disable:no-console */\n\nimport React from 'react';\n\nvar Item = function Item(_props) {\n  return null;\n};\n\nexport default function (ComposedComponent) {\n  return _a = function (_React$Component) {\n    _inherits(_a, _React$Component);\n\n    function _a() {\n      _classCallCheck(this, _a);\n\n      var _this = _possibleConstructorReturn(this, (_a.__proto__ || Object.getPrototypeOf(_a)).apply(this, arguments));\n\n      _this.select = function (value, itemHeight, scrollTo) {\n        var children = React.Children.toArray(_this.props.children);\n\n        for (var i = 0, len = children.length; i < len; i++) {\n          if (children[i].props.value === value) {\n            _this.selectByIndex(i, itemHeight, scrollTo);\n\n            return;\n          }\n        }\n\n        _this.selectByIndex(0, itemHeight, scrollTo);\n      };\n\n      _this.doScrollingComplete = function (top, itemHeight, fireValueChange) {\n        var children = React.Children.toArray(_this.props.children);\n\n        var index = _this.computeChildIndex(top, itemHeight, children.length);\n\n        var child = children[index];\n\n        if (child) {\n          fireValueChange(child.props.value);\n        } else if (console.warn) {\n          console.warn('child not found', children, index);\n        }\n      };\n\n      return _this;\n    }\n\n    _createClass(_a, [{\n      key: 'selectByIndex',\n      value: function selectByIndex(index, itemHeight, zscrollTo) {\n        if (index < 0 || index >= React.Children.count(this.props.children) || !itemHeight) {\n          return;\n        }\n\n        zscrollTo(index * itemHeight);\n      }\n    }, {\n      key: 'computeChildIndex',\n      value: function computeChildIndex(top, itemHeight, childrenLength) {\n        var index = Math.round(top / itemHeight);\n        return Math.min(index, childrenLength - 1);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return React.createElement(ComposedComponent, _extends({}, this.props, {\n          doScrollingComplete: this.doScrollingComplete,\n          computeChildIndex: this.computeChildIndex,\n          select: this.select\n        }));\n      }\n    }]);\n\n    return _a;\n  }(React.Component), _a.Item = Item, _a;\n\n  var _a;\n}","map":null,"metadata":{},"sourceType":"module"}